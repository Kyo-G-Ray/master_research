%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 433 397
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 433 397
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TITUKD+YuGothic-Regular
%!FontType1-1.0: TITUKD+YuGothic-Regular 1.0000.1.8500
14 dict begin
/FontName /TITUKD+YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid1 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/gid1 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-840 -619 2378 2642} readonly def
/UniqueID 4095570 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281F2788D084443B32230D2F4B074310C9E819A208550D46E710FA2BBB65B56BCA5B00BAA48AB973CEB963828C2C5C36069876115D96CCC7B98FC9B364F3B6BF12D4A6BED6AB1855202EDB94629A952D0C2454C860EEAD04FA1EC748943FF46D9C4D0D8562A66CAF7C61F55B084008974C6639C156BF557311CA6E0CEB3B06EBA83C6607427ACA338BDB37ECF884C4B4C4BAE50C3B7DB4BB096DE3172575EC9225E28E628758457B33438469AD43DEBE1597BB6A2024FA3E2DAB58A5DB5D5F00D948B5EFCF0290D3A76FE49E2CFE8D4013C417CA80932153F6F66189D54B5D5751C83950921E22222B4869EBAB046A273D71000E3F6C3A612401F1F55328F154BAD6E9EF68A2E15737E6680CA767CB1173112263153AB0D4A668B29752DF06FD4E40010789DD51C94FBE84CA130B1F55A89E55E0CC654BE3C5B11F3B680938E2637A83E853C53A03C84684FE29325E5DDA9E5509F4B915B2F9B6ADDF3AC901B0BD2FD98711C54EAB9DFB16A0D8337B9EEC3468C01469E216C668B9B860B1C7252F69570AD1CDF96A566A280AC7FA11B49863E76558FE16903FA1D85FCD7AA2E3D6CDC17A1AB7278CA900EE312C8C6B92DB6B19AF21AFE6ADCEBDFC2EDFA3FA6D41DB2EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/TITUKD+YuGothic-Regular cguidfix
/F1.1/TITUKD+YuGothic-Regular renmfont
%RBIBeginFontSubset: RGGAZE+CambriaMath
%!FontType1-1.0: RGGAZE+CambriaMath 1.0000.6.9000
14 dict begin
/FontName /RGGAZE+CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid1 put
dup 34 /gid2 put
dup 35 /gid3 put
dup 36 /gid4 put
dup 37 /gid6 put
dup 38 /gid5 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-3020 -5046 5873 6383} readonly def
/UniqueID 4480348 def
currentdict end
currentfile eexec



0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/RGGAZE+CambriaMath cguidfix
/F2.1/RGGAZE+CambriaMath renmfont
%RBIBeginFontSubset: SIMUFF+CambriaMath
%!FontType1-1.0: SIMUFF+CambriaMath 1.0000.6.9000
14 dict begin
/FontName /SIMUFF+CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid1 put
dup 34 /gid2 put
dup 35 /gid4 put
dup 36 /gid3 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<

0086000009A411280000000000000000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-3020 -5046 5873 6383} readonly def
/UniqueID 4480348 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB286FAF7263B5B68DE54D4A7E5E5AE8FB225BCAC76913AC93E95998B5B364FFA8043716AF73C2CF345A3A7991E41B970288ADFA59B6933CD2E08646CE8521520E9BFDE3E63DECC5469BE153BD1399610C6E5F857CC135979D5516C8105695A49182D3263013CFE3E713C22E3B664F813F4D611D75D63909BFF2E9E5CD203592AC19CF224B9FD2E0298DD5872D5BF40F88BE9547A26ADBCEEBCDBF705D5A75A78682065B4FEC90A25DBB88B89F98A74FC15EBD10DFCFBC881CD584169C755271B9B5379F8B1E52CE96C8F7FACD3E16151C634D2F12FAB68D60E65B6134E53E4CF4E7F0CB2D161828B235D361BBE9F0FAF39830FB0C03EFE37ACF8B3B2B0AD67D2775D0FC72FA23C9C08F4E11B1018FA729C79F0DA5A459ED874E9390ABFAB5FB977A503E346A5B9B4C74841C8ADC1A22CCDB778FEA23A2CAA762C42C9BA56FE2644F1D33FC41CDA3380DCF28E58E31E860FB61DAE75917DE3B1738E1766236962DD4BD5FF2BD804D51C82A4FFE83D4F81485E5FB9ACE385DA6566CB1FA2F24870A10A5F8F432254A9DB0016107C2943DD57DA37E4B78D5ADFB21E43B64E3C4D67E307F55E3BD4C30C0B4AAC533902029DE15A89C0AD14357F5B59F94A6E2DED2DD657C6F1B823F25DC2551D9180BBEBC81F56C10BB80999FAC0CADC78775A507DAD334C541FCFD3A832B0808DE32D05B6DD981878D4D55F5DC771408729B7563426CE75FF22A0D152B2AB05DBEF7D5E51B8B4FE7B3B4B8F1BEBF8FA5993A8AB91505A784524
620DA7260627F4C6FE2489F5C8D8394F8FBD32F7AABE60FBD5C4C152EB7BEB1A5C3FA8E65DD3B48BA911C39AD2953419E862FFBDABF09A8DCC4D72FE7CA7711B45AA8922965FB8A3DC541954F4252D0227D74F76808238C3BF7F8EAC47137D8C2CBEB2CE8C411BC3447446F385441C8F41BF89CA76CE6303185F03BCAF050331B75E1A02FC86073243C4673EF0EAF627CE8EFD74D0AC2618FD847451888CC06A2D56F1EB6F3C621063A38E4D33FA3FC686E988F7065B62CD86751078F16AAA13E5302A4F55DDAF433584A576069DAB40F4E2D31BFE95FD6DF4C0064FA47DE38C298FB62B28839E2B4E1D096792CE4E7D0DCC27065F8BDE2FCAFA61BA02FADBFE406B80D08D6EC79EA2A675DBB4C9F142EA1EC7B047A8A1F1AF5B921CA16475D9E90B34D23360C53018A46F7209158C3E762337B8E31D3CB5D89C4D30276B444EA0963BDB67FACB3AC69C3B5791958C057A49044D641D60D609FA32679531F501E8254EE0072D71C9B48B00B0CD7F5CADDF7E3E2FA2FE8EC34B70885861FFB408D4A82C07B7B2F6F5A6341D0C5B0D8583DDC7FA4FD245CED894DE9C711D617DBEE89C52081383CAE16914F57CFF46725D2E34EA8828B7129AF4A4D5D39D27746F168A60C6799A7A3B6B8B4CA921A9557CDEB29420D1FF799DFF866AA6464FC56A96246AA4FE461B4A8B61F824FC50E439686E19EBC991EB09C108FC9E2318132AF89B2F573464189509866855DF555FA3315879081600CDB276BB437BE4BF418D281DFAC2BFE09AB161E1CC9C58504774340630791635A26AD0C39CD8979CDE164756F23A21CFF587F41718DAA12AFC55DB592B6DBDEE72E29D50B02B76170D507959F81CBBCFA681E7D90A71BD05C7A191D0C9ACA72B9B9E704F345AA4F70FC4597A984F377D140FB244AC7D2DED281C8EB580746CEC176351FFABE40E4EC502FBE91238732CA55B2A712CF674ED63573D2D477CDDBBB39D572D222C47CFFEAE88399844C3C1B96DAD756E2893A94A3B1989D978CB57BA9703DD49476A2C21998220C8C01437227E283295C6FCC4644DE4756974AE9B14C4F241EE69D42C628595B7DEA318B93B7A4FA429B7C38CACD9C40AB20A64A2979300014A8237188FEAFB9FC37A1A0555C1AABC8AF084F303568A383AE041912E841CCCB441BD4BAD17DB0561B6C2B90C9F7CE209D394C2D640EB0DBD9675B0492DA9EFD71D8B43CA3902BF2DD31C2CD21A5DFDEFF056350C4EC0D678038704DCA166777DA9671EDD7F3D1628CCAE8732
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/SIMUFF+CambriaMath cguidfix
/F3.1/SIMUFF+CambriaMath renmfont
%RBIBeginFontSubset: IQWDHK+CambriaMath
%!FontType1-1.0: IQWDHK+CambriaMath 1.0000.6.9000
14 dict begin
/FontName /IQWDHK+CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid1 put
dup 34 /gid2 put
dup 35 /gid3 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-3020 -5046 5873 6383} readonly def
/UniqueID 4480348 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2878974AB253FC8F6E50D35D384423D89D255799B15B5BC324012A23F9FE8207FFDC337028BB82C5A8431B72BCC935F3EE876555C76475A297748C06E33C55D0D347DED2984828A7712F64C0BFC29A0D57EA438746FC6EDED4AF4EA30CAFFEE4D12C6DBA7BCE3A87EA86DC2C00801A9E05332B4CCBA17E6310FF11A95A16B607755B936F7D78A134FC0912C67613A584D0BFD7D7E298E89FF90BACD56B408301D30B1589432293602938CDDF605F7143A58C241B5D4CE98EEBFC122E46BA93067E86BDE08AFB0709BA91E6779E6EF650BED4FEF964C6C135B3645EE47683A3B5806103141857DE4040C1B4609CA6B834DED0AA144BD586462907BE9CF1AD2CA83EE137898A396EDDDA3E4225488CEED05ED1D234F9B99518DD1CC221926F3FB9F6CFB268540444F2B7AED93DA88ED9E9E0FC54E080ADCE0054C2815C583FC85E9A3EDB10F46A99EB40F3312FF8053CDF4D1270CB0A7F619F5527A60746B6AB3603B90BDAE8FD4110B5D78CB9B69158B778A34A2166D99AB842FFBF7A8F55533A2AB6A901D04D2AE662D431C44B21F54D159AAF80687D65030D4EE5033750B1FF6B53A4F96B3012F8349059C032CAAD7493EFAD2FF56448C2D96B65A315CD66B62B783F93DA67F3ECEA02E3C2C33E8F9E4F4332B9094BF807796020D9FBA0E99645B9C73EACAA8D60EA5F7CA41C32ED037A8E95E4313F227B5E5932CDEDCF9543F4B3102F76EE773E5FE0D16A1EE1F7326CD9C6165A5B8BA6039C4C92DEE3AA6397E1C697D
A32B0E2D3267FFDEB780E0A9FF9AA157236EF40A5C4DE8EFABCD1F4B31EF10992B7160B7902D687D3C475AFC4171D542B94B9B04BE31074B64D017D926ECBD91D81BAC6BA6766F8977CB7D66B6F7EA7B5C530BCB8BE299B353B3B81B611208EEA0BFB14767D58A8D432B696D99E4F3D1A70E1DBC2B6DF0E4118D1516A2F551C9EA16AC9D56EFAEDB8C083E9C9175E406B4C4E6EDB9FFA6F131B053AF3EBDA703046BF63D7FF33806503E95F2D7F0C29DA6D83BC8BF726336DF9700560BF3569252DAF4570FC02B007B258C4BD8D3401A5D420CD07DD4B68753E9900376F57151605C55A5030CFFA034DD5C9565660E45C96C2F9E904F87BDE2356BA74D6B87D5787E6D393B2CB98487BE807B1E1058B42E5AAC75C3744240CFB08B2B42A6217C97A5AC0A99CF1726885BB6274E825C876681DC9759DA49E31135FB39BC0AA33DD63D73E59439498D16CA425DC10123D429816A08ECA7623723A992A46206C70B021FA068F4C8E2EE8E5CCA0014650C77EE227FEE0C4DDCE761EEFB196FAED62A99A389B6B62A6E42
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/IQWDHK+CambriaMath cguidfix
/F4.1/IQWDHK+CambriaMath renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 433 397 rc
0 0 m
433 0 l
433 397 l
0 397 l
h
f
/Cs2 SC
1 1 1 sc
38.205883 363.29245 m
38.205883 377.35794 49.609455 388.76038 63.676472 388.76038 c
77.743484 388.76038 89.147057 377.35794 89.147057 363.29245 c
89.147057 349.22696 77.743484 337.82452 63.676472 337.82452 c
49.609455 337.82452 38.205883 349.22696 38.205883 363.29245 c
h
f
12700 w
8 M
0 0 0 sc
0.00011797401 0 0 -0.00011796167 38.205883 388.76038 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
38.205883 288.38678 m
38.205883 302.45227 49.609455 313.85471 63.676472 313.85471 c
77.743484 313.85471 89.147057 302.45227 89.147057 288.38678 c
89.147057 274.32132 77.743484 262.91885 63.676472 262.91885 c
49.609455 262.91885 38.205883 274.32132 38.205883 288.38678 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 38.205883 313.85471 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
38.205883 214.97925 m
38.205883 229.04472 49.609455 240.44717 63.676472 240.44717 c
77.743484 240.44717 89.147057 229.04472 89.147057 214.97925 c
89.147057 200.91376 77.743484 189.51132 63.676472 189.51132 c
49.609455 189.51132 38.205883 200.91376 38.205883 214.97925 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 38.205883 240.44717 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
0 -1.4981132 1.4982699 0 -342.53207 178.27547 cm
/F1.1[ 18 0 0 18 0 0]sf
0 265 m
(!)s
1 1 1 sc
CM
38.205883 113.10754 m
38.205883 127.1731 49.609455 138.57547 63.676472 138.57547 c
77.743484 138.57547 89.147057 127.1731 89.147057 113.10754 c
89.147057 99.042 77.743484 87.639626 63.676472 87.639626 c
49.609455 87.639626 38.205883 99.042 38.205883 113.10754 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 38.205883 138.57547 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1.4982699 0 0 1.4981132 50.490334 -38.950943 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 64.027199 -44.943398 cm
/F3.1[ 13 0 0 13 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 52.949863 -185.76604 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 67.108513 -191.75848 cm
/F3.1[ 13 0 0 13 0 0]sf
0 265 m
(")s
1 1 1 sc
CM
206.01212 315.35284 m
206.01212 329.4183 217.41574 340.82074 231.4827 340.82074 c
245.54965 340.82074 256.95328 329.4183 256.95328 315.35284 c
256.95328 301.28735 245.54965 289.88492 231.4827 289.88492 c
217.41574 289.88492 206.01212 301.28735 206.01212 315.35284 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 206.01212 340.82074 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
206.01212 241.94528 m
206.01212 256.01077 217.41574 267.41321 231.4827 267.41321 c
245.54965 267.41321 256.95328 256.01077 256.95328 241.94528 c
256.95328 227.87979 245.54965 216.47736 231.4827 216.47736 c
217.41574 216.47736 206.01212 227.87979 206.01212 241.94528 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 206.01212 267.41321 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
0 -1.4981132 1.4982699 0 -176.879 206.73962 cm
/F1.1[ 18 0 0 18 0 0]sf
0 265 m
(!)s
1 1 1 sc
CM
206.01212 141.5717 m
206.01212 155.63718 217.41574 167.03963 231.4827 167.03963 c
245.54965 167.03963 256.95328 155.63718 256.95328 141.5717 c
256.95328 127.50615 245.54965 116.10378 231.4827 116.10378 c
217.41574 116.10378 206.01212 127.50615 206.01212 141.5717 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 206.01212 167.03963 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
370.82181 363.29245 m
370.82181 377.35794 382.22543 388.76038 396.29239 388.76038 c
410.35934 388.76038 421.76297 377.35794 421.76297 363.29245 c
421.76297 349.22696 410.35934 337.82452 396.29239 337.82452 c
382.22543 337.82452 370.82181 349.22696 370.82181 363.29245 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 370.82181 388.76038 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
370.82181 289.88492 m
370.82181 303.95038 382.22543 315.35284 396.29239 315.35284 c
410.35934 315.35284 421.76297 303.95038 421.76297 289.88492 c
421.76297 275.81943 410.35934 264.41699 396.29239 264.41699 c
382.22543 264.41699 370.82181 275.81943 370.82181 289.88492 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 370.82181 315.35284 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1 1 1 sc
CM
370.82181 214.97925 m
370.82181 229.04472 382.22543 240.44717 396.29239 240.44717 c
410.35934 240.44717 421.76297 229.04472 421.76297 214.97925 c
421.76297 200.91376 410.35934 189.51132 396.29239 189.51132 c
382.22543 189.51132 370.82181 200.91376 370.82181 214.97925 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 370.82181 240.44717 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
0 -1.4981132 1.4982699 0 -11.225456 179.77359 cm
0 265 m
(!)s
1 1 1 sc
CM
370.82181 113.10754 m
370.82181 127.1731 382.22543 138.57547 396.29239 138.57547 c
410.35934 138.57547 421.76297 127.1731 421.76297 113.10754 c
421.76297 99.042 410.35934 87.639626 396.29239 87.639626 c
382.22543 87.639626 370.82181 99.042 370.82181 113.10754 c
h
f
0 0 0 sc
0.00011797401 0 0 -0.00011796167 370.82181 138.57547 cm
0 215900 m
0 96661.719 96661.719 0 215900 0 c
335138.31 0 431800 96661.719 431800 215900 c
431800 335138.31 335138.31 431800 215900 431800 c
96661.719 431800 0 335138.31 0 215900 c
h
S
1.4982699 0 0 1.4981132 383.92688 -185.76604 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(")s
1.4982699 0 0 1.4981132 398.2803 -190.26038 cm
/F3.1[ 13 0 0 13 0 0]sf
0 265 m
(#)s
1.4982699 0 0 1.4981132 223.40883 -157.30188 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(#)s
1.4982699 0 0 1.4981132 233.46222 -163.29434 cm
/F3.1[ 13 0 0 13 0 0]sf
0 265 m
($)s
CM
89.437843 365.4809 m
200.08257 318.88315 l
199.50093 317.50247 l
88.856277 364.10025 l
h
200.15552 322.9162 m
206.69547 315.28528 l
196.66605 314.63239 l
h
f
89.687111 365.30966 m
201.06018 249.47136 l
199.98007 248.43317 l
88.60701 364.27148 l
h
202.72221 253.14682 m
205.71216 243.55215 l
196.24159 246.91737 l
h
f
89.810509 365.13843 m
203.87993 147.63399 l
202.55305 146.93825 l
88.483612 364.44272 l
h
206.5013 150.7 m
206.69547 140.65231 l
198.53993 146.52563 l
h
f
89.284599 119.09492 m
198.33528 139.46014 l
198.0602 140.93279 l
89.009514 120.56757 l
h
197.55019 135.50348 m
205.56174 141.5717 l
195.89984 144.33937 l
h
f
91.195137 117.25259 m
202.43889 237.43716 l
201.33931 238.45468 l
90.09552 118.27016 l
h
204.17029 233.79375 m
206.9776 243.44339 l
197.57266 239.89931 l
h
f
89.791252 118.61304 m
202.53297 308.52908 l
201.24461 309.2937 l
88.502861 119.37772 l
h
204.98924 305.32925 m
205.71275 315.35284 l
197.25891 309.91739 l
h
f
89.311401 288.4151 m
198.5675 312.97876 l
198.23878 314.44049 l
88.982712 289.87668 l
h
197.92744 308.99603 m
205.71201 315.35284 l
195.95528 317.76584 l
h
f
89.425903 289.08206 m
193.5152 247.34149 l
192.95753 245.95094 l
88.868217 287.69153 l
h
193.51878 251.37531 m
200.18938 243.85808 l
190.1727 243.03247 l
h
f
89.735146 288.85077 m
201.65918 147.03195 l
200.48305 146.10391 l
88.558975 287.92282 l
h
203.67151 150.52802 m
205.71185 140.6877 l
196.61452 144.95981 l
h
f
89.629684 216.6026 m
200.46596 309.95422 l
199.50063 311.09998 l
88.664436 217.74835 l
h
201.73305 306.1246 m
205.71275 315.35284 l
195.94164 312.9993 l
h
f
92.328293 215.9256 m
196.28534 242.3688 l
195.91602 243.82077 l
91.958908 217.37758 l
h
195.75676 238.36989 m
203.36078 244.94151 l
193.54051 247.08112 l
h
f
89.552444 217.10732 m
199.81856 146.15887 l
199.00784 144.89905 l
88.741669 215.8474 l
h
200.58553 150.11919 m
205.71291 141.47557 l
195.72095 142.56023 l
h
f
257.242 315.40842 m
363.31143 359.7139 l
362.73398 361.09622 l
256.66458 316.79071 l
h
363.37271 355.68054 m
369.93512 363.29245 l
359.90765 363.9747 l
h
f
257.1181 316.08347 m
362.79169 292.25162 l
362.46191 290.79022 l
256.78848 314.62219 l
h
362.1543 296.2348 m
369.93466 289.87292 l
360.1763 287.46634 l
h
f
257.44952 315.91403 m
364.81793 221.00705 l
363.82562 219.88467 l
256.45706 314.79163 l
h
366.17627 224.80522 m
369.93439 215.48456 l
360.22214 218.07076 l
h
f
257.60654 315.71957 m
366.92001 121.05241 l
365.61353 120.31895 l
256.30005 314.98608 l
h
369.45255 124.19231 m
369.93439 114.15422 l
361.61389 119.79157 l
h
f
259.00351 240.54845 m
366.11154 357.26675 l
365.0076 358.27948 l
257.8996 241.56131 l
h
367.85852 353.63083 m
370.62448 363.29245 l
361.23483 359.70792 l
h
f
255.75047 240.27579 m
362.83197 286.24164 l
362.24091 287.61826 l
255.15956 241.6524 l
h
362.9328 282.20917 m
369.42017 289.88492 l
359.38641 290.46887 l
h
f
255.61653 242.67667 m
365.6778 218.37802 l
365.35477 216.9151 l
255.2935 241.2139 l
h
365.02231 222.3582 m
372.83142 216.03152 l
363.08414 213.5809 l
h
f
262.02194 243.9249 m
365.81982 120.23514 l
364.67215 119.27216 l
260.87427 242.9619 l
h
367.72638 123.79002 m
370.06143 114.01537 l
360.83987 118.01225 l
h
f
257.62106 140.66823 m
367.20844 356.27515 l
365.87271 356.9538 l
256.28552 141.34697 l
h
369.8689 353.24295 m
369.93481 363.29245 l
361.8548 357.31543 l
h
f
257.54944 141.00516 m
365.99362 283.47058 l
364.80145 284.37799 l
256.35712 141.91249 l
h
368.06693 280.01041 m
369.93481 289.88492 l
360.9136 285.45422 l
h
f
257.36725 140.20256 m
367.51556 213.21237 l
366.68777 214.46104 l
256.53931 141.45123 l
h
368.33646 209.26305 m
373.34579 217.97548 l
363.36942 216.75496 l
h
f
257.12918 142.2998 m
362.82867 116.76628 l
362.4769 115.31007 l
256.7774 140.84358 l
h
362.25183 120.75867 m
369.93451 114.27914 l
360.14078 112.02135 l
h
f
1.4982699 0 0 1.4981132 38.198273 -368.53586 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
($)s
1.4982699 0 0 1.4981132 31.261282 -347.56226 cm
/F4.1[ 24 0 0 24 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 214.09602 -362.5434 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(%)s
1.4982699 0 0 1.4981132 206.25258 -343.06793 cm
/F4.1[ 24 0 0 24 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 370.08002 -368.53586 cm
/F2.1[ 18 0 0 18 0 0]sf
0 265 m
(&)s
1.4982699 0 0 1.4981132 363.66742 -347.56226 cm
/F4.1[ 24 0 0 24 0 0]sf
0 265 m
(!)s
1.4982699 0 0 1.4981132 154.12538 -32.958492 cm
0 265 m
(")s
1.4982699 0 0 1.4981132 288.0668 -32.958492 cm
0 265 m
(#)s
ep
end
%%Trailer
%%EOF
